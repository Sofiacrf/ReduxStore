{"ast":null,"code":"var _jsxFileName = \"/Users/sofiarojas/Desktop/Homework/ReduxStore/client/src/components/Cart/index.js\";\nimport React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  // const [state, dispatch] = useStoreContext();\n  // const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n  // useEffect(() => {\n  //   if (data) {\n  //     stripePromise.then((res) => {\n  //       res.redirectToCheckout({ sessionId: data.checkout.session });\n  //     });\n  //   }\n  // }, [data]);\n  // useEffect(() => {\n  //   async function getCart() {\n  //     const cart = await idbPromise('cart', 'get');\n  //     dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n  //   }\n  //   if (!state.cart.length) {\n  //     getCart();\n  //   }\n  // }, [state.cart.length, dispatch]);\n  // function toggleCart() {\n  //   dispatch({ type: TOGGLE_CART });\n  // }\n  // function calculateTotal() {\n  //   let sum = 0;\n  //   state.cart.forEach((item) => {\n  //     sum += item.price * item.purchaseQuantity;\n  //   });\n  //   return sum.toFixed(2);\n  // }\n  // function submitCheckout() {\n  //   const productIds = [];\n  //   state.cart.forEach((item) => {\n  //     for (let i = 0; i < item.purchaseQuantity; i++) {\n  //       productIds.push(item._id);\n  //     }\n  //   });\n  //   getCheckout({\n  //     variables: { products: productIds },\n  //   });\n  // }\n  // if (!state.cartOpen) {\n  //   return (\n  //     <div className=\"cart-closed\" onClick={toggleCart}>\n  //       <span role=\"img\" aria-label=\"trash\">\n  //         ðŸ›’\n  //       </span>\n  //     </div>\n  //   );\n  // }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close\",\n    onClick: toggleCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"[close]\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Shopping Cart\"), state.cart.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, state.cart.map(item => /*#__PURE__*/React.createElement(CartItem, {\n    key: item._id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Total: $\", calculateTotal()), Auth.loggedIn() ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitCheckout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Checkout\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"(log in to check out)\"))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"shocked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDE31\"), \"You haven't added anything to your cart yet!\"));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/sofiarojas/Desktop/Homework/ReduxStore/client/src/components/Cart/index.js"],"names":["React","useEffect","loadStripe","useLazyQuery","QUERY_CHECKOUT","idbPromise","CartItem","Auth","useDispatch","useSelector","TOGGLE_CART","ADD_MULTIPLE_TO_CART","stripePromise","Cart","toggleCart","state","cart","length","map","item","_id","calculateTotal","loggedIn","submitCheckout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,qBAAlD;AACA,OAAO,aAAP;AAEA,MAAMC,aAAa,GAAGV,UAAU,CAAC,kCAAD,CAAhC;;AAEA,MAAMW,IAAI,GAAG,MAAM;AAEjB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,OAAO,EAAEC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,EAKGC,KAAK,CAACC,IAAN,CAAWC,MAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACC,IAAN,CAAWE,GAAX,CAAgBC,IAAD,iBACd,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAyB,IAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,eAKE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiBE,cAAc,EAA/B,CADF,EAGGd,IAAI,CAACe,QAAL,kBACC;AAAQ,IAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANJ,CALF,CADD,gBAiBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,iDAtBJ,CADF;AAgCD,CA5FD;;AA8FA,eAAeV,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  \n  // const [state, dispatch] = useStoreContext();\n  // const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // useEffect(() => {\n  //   if (data) {\n  //     stripePromise.then((res) => {\n  //       res.redirectToCheckout({ sessionId: data.checkout.session });\n  //     });\n  //   }\n  // }, [data]);\n\n  // useEffect(() => {\n  //   async function getCart() {\n  //     const cart = await idbPromise('cart', 'get');\n  //     dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n  //   }\n\n  //   if (!state.cart.length) {\n  //     getCart();\n  //   }\n  // }, [state.cart.length, dispatch]);\n\n  // function toggleCart() {\n  //   dispatch({ type: TOGGLE_CART });\n  // }\n\n  // function calculateTotal() {\n  //   let sum = 0;\n  //   state.cart.forEach((item) => {\n  //     sum += item.price * item.purchaseQuantity;\n  //   });\n  //   return sum.toFixed(2);\n  // }\n\n  // function submitCheckout() {\n  //   const productIds = [];\n\n  //   state.cart.forEach((item) => {\n  //     for (let i = 0; i < item.purchaseQuantity; i++) {\n  //       productIds.push(item._id);\n  //     }\n  //   });\n\n  //   getCheckout({\n  //     variables: { products: productIds },\n  //   });\n  // }\n\n  // if (!state.cartOpen) {\n  //   return (\n  //     <div className=\"cart-closed\" onClick={toggleCart}>\n  //       <span role=\"img\" aria-label=\"trash\">\n  //         ðŸ›’\n  //       </span>\n  //     </div>\n  //   );\n  // }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            ðŸ˜±\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}